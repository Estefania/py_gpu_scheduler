


class GPU_data():
    device_number
    memory
    compute_capability
    number_cores
    proccesses_executing
    free_memory


    def get_device_number():
      return device_number
    def get_memory():
      return self.memory
    def get_compute_capability():
      return self.compute_capability
    def get_number_cores():
      return self.number_cores
    def get_processes_executing():
      return self.processes_executing
    def get_free_memory():
      return self.free_memory

    def set_device_number(device_number):
      self.device_number = device_number
    def set_memory(memory):
      self.memory = memory
    def set_compute_capability(compute_capability):
      self.compute_capability = compute_capability
    def set_number_cores(number_cores):
      self.number_cores = number_cores
    def set_processes_executing(processes_executing):
      self.processes_executing = processes_executing 
    def set_free_memory(free_memory):
      self.free_memory = free_memory


    def obtain_static_info():
      import pycuda.driver as cuda
      import pycuda.autoinit
      import pycuda.tools

      for devicenum in range(cuda.Device.count()):
	 device=cuda.Device(devicenum)
	 dev_data= pycuda.tools.DeviceData(device)
	 set_memory(dev_data.)
	 set_compute_capability()
	 set_number_cores()
	  
	 